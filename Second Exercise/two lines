# Optional generic preliminaries:
graphics.off() # This closes all of R's graphics windows.
rm(list=ls())


# Required packages for this exercise.
require(rjags)
require(coda)


# Load data
load(file = "twolines.Rdata")
n = length(y)
w=list()

## -------- Linear regression --------

linreg_model1 ="
model{      
  # Prior 
  t ~ dgamma(0.01, 0.01)
  for (j in 1:2){
w[j] ~ dnorm(0, 1)
}

for (i in 1:n){
u[i] = w[1]+w[2]*x[i]
}

# Likelihood
for (i in 1:n){
y[i] ~ dnorm(u[i], t)
}
}
"

niter = 10000
nchains = 4

# Create your data structure here
data = list('x'=x, 'y'=y, 'n'=n)

jagsmodel_linreg1 <- jags.model(textConnection(linreg_model1), 
                                data = data,
                                n.chains = nchains)

store_parameters = c('w')

# Collect samples and store them in a matrix of niter*nchains by number-of-stored-parameters
samples_oneline = coda.samples(jagsmodel_linreg1, store_parameters, n.iter = niter)
samplesMatrix = as.matrix(samples_oneline)

plot(x,y,pch=20)

list <- c()
N=500
for (i in 1:N){
  a <- sample(seq(1,4), 1, replace = FALSE)
  b <- sample(10000, 1)
  c <- samples_oneline[[a]][b, ]
  list<- c(list, c)
}

plot(x,y,pch=20)
for (i in seq(1, N, by = 2)){
  abline(list[i], list[i+1], col=rgb(0.8, 0.2, 0.2, max = 1.0, alpha = 0.1))
}

mcmcsummary = summary(samples_oneline)
mcmcsummary$statistics
m <- mcmcsummary$statistics[,"Mean"]

abline(m[1],m[2], col='blue', lwd = 2)



## -------- Linear regression mixture --------

linreg_model2 ="
model{      
  # Prior 
  
  # Likelihood

}

"


niter = 10000
nchains = 4
# Create your data structure here
data = list()

jagsmodel_linreg2 <- jags.model(textConnection(linreg_model2), 
                                data = data,
                                n.chains = nchains)

store_parameters = c()

# Collect samples and store them in a matrix of niter*nchains by number-of-stored-parameters
samples_twolines = coda.samples(jagsmodel_linreg2, store_parameters, n.iter = niter)
samplesMatrix = as.matrix(samples_twolines)

plot(x,y,pch=20)



## -------- Model selection --------

linreg_model3 ="
model{      
  # Prior 
  
  # Likelihood

"

niter = 10000
nchains = 4
# Create your data structure here
data = list()

jagsmodel_linreg3 <- jags.model(textConnection(linreg_model3), 
                                data = data,
                                n.chains = nchains)

store_parameters = c()

# Collect samples and store them in a matrix of niter*nchains by number-of-stored-parameters
samples_oneortwolines = coda.samples(jagsmodel_linreg3, store_parameters, n.iter = niter)
samplesMatrix = as.matrix(samples_oneortwolines)

plot(x,y,pch=20)


posterior_model1_mcmc = sum(m==1) / length(m)
posterior_model2_mcmc = 1 - posterior_model1_mcmc


nsamples = 250
plot(x,y,pch=20)


